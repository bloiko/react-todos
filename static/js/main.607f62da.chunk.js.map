{"version":3,"sources":["components/TodoItem.js","components/RemoveButton.js","components/TodoForm.js","components/Todos.js","App.js","index.js"],"names":["TodoItem","item","handleCheck","handleRemove","trashIcon","xmlns","height","viewBox","width","fill","d","className","style","textDecoration","checked","color","Checkbox","onClick","id","title","description","date","danger","event","preventDefault","RemoveButton","handleRemoveChecked","checkedTodos","TodoForm","handleSubmit","Form","useForm","form","layout","onFinish","values","toUpperCase","match","length","resetFields","Item","name","placeholder","htmlType","type","Todos","dateFormat","validateDate","dateArr","toString","split","getMonth","useState","Date","todos","setTodos","filter","index","findIndex","splice","console","log","newItem","reduce","count","items","map","renderTodoItems","Header","Layout","Footer","Content","App","span","offset","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.607f62da.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Button} from \"antd\";\r\nimport Checkbox from \"antd/es/checkbox/Checkbox\";\r\n\r\n\r\nconst TodoItem = ({item, handleCheck, handleRemove}) => {\r\n\r\n\r\n    const onChangeItem = () => {\r\n        handleCheck(item.id)\r\n    };\r\n\r\n    const onRemoveItem = (event) => {\r\n        event.preventDefault();\r\n        handleRemove(item.id);\r\n    }\r\n\r\n    const trashIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"18px\"  viewBox=\"0 0 24 24\" width=\"18px\"\r\n                           fill=\"#000000\">\r\n        <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\r\n        <path\r\n            d=\"M16 9v10H8V9h8m-1.5-6h-5l-1 1H5v2h14V4h-3.5l-1-1zM18 7H6v12c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7z\"/>\r\n    </svg>\r\n\r\n\r\n    return (\r\n        <li className=\"todo-item\"\r\n            key={item.id}\r\n            style={{\r\n                textDecoration: item.checked ? 'line-through' : 'none',\r\n                color: item.checked ? 'red' : 'black'\r\n            }}>\r\n            <Checkbox onClick={onChangeItem} checked={item.checked}>{item.title} </Checkbox>\r\n            <span>{item.description}</span>\r\n            <span>{item.date}</span>\r\n            <Button danger onClick={onRemoveItem}>\r\n                {trashIcon}\r\n            </Button>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from 'react';\r\nimport {Button} from \"antd\";\r\n\r\nimport './RemoveButton.css'\r\n\r\nconst RemoveButton = ({handleRemoveChecked, checkedTodos}) => {\r\n\r\n    const onRemove = (event) => {\r\n        event.preventDefault();\r\n        handleRemoveChecked()\r\n    }\r\n\r\n\r\n    return (\r\n        <Button danger onClick={onRemove}>\r\n            Remove Checked {checkedTodos}\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport default RemoveButton;\r\n","import React from 'react';\r\nimport {Button, Form, Input} from \"antd\";\r\nimport RemoveButton from \"./RemoveButton\";\r\n\r\n\r\nconst TodoForm = ({handleSubmit, handleRemoveChecked, checkedTodos}) => {\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const validateTitle = (title) => title[0] === title[0].toUpperCase() && title[0].match(/[a-z]/i);\r\n    const validateDescription = (description) => description.length >= 3\r\n\r\n    const onFinish = (values) => {\r\n        if (handleSubmit && validateTitle(values.title) && validateDescription(values.description)) {\r\n            handleSubmit(values.title, values.description);\r\n        }\r\n        form.resetFields();\r\n    }\r\n\r\n    return (\r\n        <Form form={form} className=\"todo-form\" layout={'inline'} onFinish={onFinish}>\r\n            <Form.Item name=\"title\" className=\"todo-form-item\">\r\n                <Input placeholder=\"Todo Title\"/>\r\n            </Form.Item>\r\n            <Form.Item name=\"description\" className=\"todo-form-item\">\r\n                <Input placeholder=\"Todo Description\"/>\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button htmlType=\"submit\" type=\"primary\">Add</Button>\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <RemoveButton handleRemoveChecked={handleRemoveChecked} checkedTodos={checkedTodos}/>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default TodoForm;\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Card, Divider} from \"antd\";\r\nimport TodoItem from \"./TodoItem\"\r\nimport TodoForm from \"./TodoForm\";\r\n\r\nconst Todos = () => {\r\n\r\n    const dateFormat = (date) => {\r\n        const validateDate = (date) => date < 10 ? `0${date}` : date;\r\n\r\n        const dateArr = date.toString().split(' ')\r\n\r\n        return `${validateDate(dateArr[2])}.${validateDate(date.getMonth() + 1)}.${dateArr[3]} - ${dateArr[4]}`\r\n    }\r\n\r\n    const [todos, setTodos] = useState([\r\n        {id: 0, title: 'Some', description: 'Some desc', date: dateFormat(new Date()), checked: false}\r\n    ]);\r\n\r\n    const checkedTodos= () => {\r\n        return todos.reduce((count, item) => {\r\n            if (item.checked) {\r\n                count++;\r\n            }\r\n            return count;\r\n        }, 0)\r\n    }\r\n\r\n\r\n    const removeChecked = () => {\r\n        setTodos(todos.filter(item => !item.checked))\r\n    }\r\n\r\n    const handleSubmit = (title, description) => {\r\n\r\n        title = title ? title : 'no name'\r\n        description = description ? description : 'no description'\r\n        const date = new Date();\r\n        console.log(dateFormat(date))\r\n        const newItem = {\r\n            id: date,\r\n            title,\r\n            description,\r\n            date: dateFormat(date),\r\n            checked: false\r\n        }\r\n        setTodos([...todos, newItem])\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n        setTodos(todos.filter(item => item.id !== id))\r\n    }\r\n\r\n    const handleCheck = (id) => {\r\n        const index = todos.findIndex(item => item.id === id);\r\n        if (index !== -1) {\r\n            const item = todos[index];\r\n            item.checked = !item.checked;\r\n            todos.splice(index, 1, item);\r\n            setTodos([...todos]);\r\n        }\r\n    }\r\n\r\n    const renderTodoItems = (todos) => {\r\n        const items = todos.map((item) => {\r\n            return <TodoItem key={item.id} item={item} handleRemove={handleRemove} handleCheck={handleCheck}/>\r\n        })\r\n        return <ul className=\"todo-list\">{items}</ul>;\r\n    }\r\n\r\n\r\n    return (\r\n        <Card title=\"My Todos\">\r\n\r\n            <TodoForm handleSubmit={handleSubmit} handleRemoveChecked={removeChecked} checkedTodos={checkedTodos()}/>\r\n            <Divider/>\r\n            {renderTodoItems(todos)}\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Todos;\r\n","import 'antd/dist/antd.css';\nimport {Col, Layout, Row} from \"antd\";\nimport \"./index.css\"\nimport Todos from \"./components/Todos\"\n\n\nconst {Header, Footer, Content} = Layout;\n\n\nconst App = () => {\n\n  return <Layout>\n    <Header> </Header>\n    <Content>\n      <Row>\n        <Col span={12} offset={8} className=\"todo\">\n          <Todos/>\n        </Col>\n      </Row>\n    </Content>\n    <Footer></Footer>\n  </Layout>\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App/>\n    ,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}